name: "Build and release binary"

on:
  workflow_dispatch:
  push:
    tags:
      - "*Release*"

env:
  ARCHIVE_NAME_LINUX: ${{ github.ref_name }}-linux-x86_64.zip

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: cmake nasm yasm build-essential python3
          version: 1.0

      - name: Install Cython
        run: |
          pip3 install cython

      - name: Build and install pkg-config
        run: |
          cd
          wget https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz
          tar xzf pkg-config-0.29.2.tar.gz
          cd pkg-config-0.29.2
          ./configure --with-internal-glib
          make
          sudo make install

      - name: Build and install Autotools (m4)
        run: |
          cd
          wget https://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.gz
          tar xzf m4-1.4.19.tar.gz
          cd m4-1.4.19
          ./configure
          make
          sudo make install

      - name: Build and install Autotools (autoconf)
        run: |
          cd
          wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.72.tar.gz
          tar xzf autoconf-2.72.tar.gz
          cd autoconf-2.72
          ./configure
          make
          sudo make install

      - name: Build and install Autotools (automake)
        run: |
          cd
          wget https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz
          tar xzf automake-1.16.5.tar.gz
          cd automake-1.16.5
          ./configure
          make
          sudo make install

      - name: Build and install Autotools (libtool)
        run: |
          cd
          wget https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz
          tar xzf libtool-2.4.7.tar.gz
          cd libtool-2.4.7
          ./configure
          make
          sudo make install

      - name: Build and install zimg
        run: |
          cd
          wget https://github.com/sekrit-twc/zimg/archive/refs/tags/release-3.0.5.tar.gz
          tar xzf release-3.0.5.tar.gz
          cd zimg-release-3.0.5
          ./autogen.sh
          ./configure
          make
          sudo make install

      - name: Build and install VapourSynth
        run: |
          cd
          wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R68.tar.gz
          tar xzf R68.tar.gz
          cd vapoursynth-R68
          ./autogen.sh
          ./configure
          make
          sudo make install
        continue-on-error: true

      - name: Print log
        run: |
          cd
          cd vapoursynth-R68
          cat config.log

      - name: Build
        run: |
          cd ${{ github.workspace }}
          ./autogen.sh
          ./configure
          make

      - name: Create binary archive
        run: |
          zip -7 -j ${{ env.ARCHIVE_NAME_LINUX }} ${{ github.workspace }}/.libs/libnnedi3.so ${{ github.workspace }}/src/nnedi3_weights.bin

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: vapoursynth_nnedi3-linux
          path: ${{ env.ARCHIVE_NAME_LINUX }}
          if-no-files-found: error

  github-release:
    name: Create GitHub release
    runs-on: ubuntu-20.04

    needs:
      - build-linux

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --title '${{ github.ref_name }}'
          --notes ""

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}

        run: |
          gh release upload \
          '${{ github.ref_name }}' \
          'misrc_extract-linux/${{ env.ARCHIVE_NAME_LINUX }}' \
          --repo '${{ github.repository }}'

